⭐︎機械語
「意外に機械語とは何か？」ということを直感的に説明するのは難しそうですが、この本によると以下のように説明されています。

機械語：機械語は仕様によって決められた形式に従い、プロセッサとレジスタを用いてメモリを操作するように設計されている。
　→つまり機械語と「プロセッサ」「レジスタ」「メモリ」は切っても切り離せない！

プロセッサ（CPU）：仕様で決められた基本的な命令セットを実行することができる。これらの命令セットには、算術演算と論理演算、メモリアクセス演算、制御演算などが含まれる。
この仕様にはCPUの仕様やレジスタ・メモリなどのハードウェアのバス幅などの仕様も含まれる。
　→当然だが機械語では原理的にCPUの命令セット以外のことは実行できない。それ以上のことを実施する場合には、上位ソフトウェアである高級言語側で対応する。

自分なりに機械語をもう少し詳しく定義しなおすと
「機械語はCPUであらかじめ定義された算術演算・論理演算・メモリアクセス演算・制御演算やレジスタ・メモリなどのバス幅等のハードウェアの仕様に基づいて、プロセッサとレジスタを用いてメモリ操作を実行する」
となる。

当然CPUの命令セットやレジスタの数や種類はマシン毎に異なる。

⭐︎HACK言語の仕様
アドレスの指定には15bit
レジスタ幅は16bit
命令長は16bit

・メモリ
　命令メモリとデータメモリの2つ存在する。それぞれまったく別物。（ファミコンに例えると命令メモリはゲームのカセットで、データメモリはRAM。）
　どちらも16bit幅で15bitのアドレス空間
　命令長は機械語に依存（HACKでは16bitのもよう）
 
・レジスタ
　DレジスタとAレジスタの2つ。Dレジスタはデータのみ、Aレジスタはデータとアドレスの両方。
 
 　単に記法のお約束
  　@数字orラベルは、Aレジスタにその値を設定することを意味する。
    例：@17 は　A←17
   
    Mは現在のAレジスタの参照先の値を意味する。
    例：M
   
 
 ・命令
 　命令はアドレス命令と計算命令からなる
  
 ・A命令
 　Aレジスタに15bitの値を設定する
   非常にシンプルで「@value」のみ
  
 ・C命令
 
 
